{
  "version": 3,
  "sources": ["../src/index.ts", "../src/utils/EventEmitter.ts", "../src/Danmaku.ts", "../src/Track.ts", "../src/DanmakuEngine.ts"],
  "sourcesContent": ["export function hello(word: string) {\r\n  console.log('hello123')\r\n  return word\r\n}\r\n\r\nexport * from './DanmakuEngine';\r\nexport * from './Track';\r\nexport * from './Danmaku';", "export class EventEmitter {\r\n  // \u5B58\u50A8\u4E8B\u4EF6\u53CA\u5176\u5BF9\u5E94\u7684\u56DE\u8C03\u51FD\u6570\u5217\u8868\r\n  private events: { [eventName: string]: Array<(...args: any[]) => void> } = {};\r\n\r\n  // \u8BA2\u9605\u4E8B\u4EF6\r\n  public on(eventName: string, callback: (...args: any[]) => void): void {\r\n    if (!this.events[eventName]) {\r\n      this.events[eventName] = [];\r\n    }\r\n    this.events[eventName].push(callback);\r\n  }\r\n\r\n  // \u53EA\u8BA2\u9605\u4E00\u6B21\u4E8B\u4EF6\uFF0C\u89E6\u53D1\u540E\u81EA\u52A8\u53D6\u6D88\u8BA2\u9605\r\n  public once(eventName: string, callback: (...args: any[]) => void): void {\r\n    const onceCallback = (...args: any[]) => {\r\n      // \u5148\u6267\u884C\u56DE\u8C03\u51FD\u6570\r\n      callback(...args);\r\n      // \u6267\u884C\u5B8C\u540E\u53D6\u6D88\u8BA2\u9605\r\n      this.off(eventName, onceCallback);\r\n    };\r\n    this.on(eventName, onceCallback);\r\n  }\r\n\r\n  // \u53D6\u6D88\u8BA2\u9605\u4E8B\u4EF6\r\n  public off(eventName: string, callback: (...args: any[]) => void): void {\r\n    if (this.events[eventName]) {\r\n      this.events[eventName] = this.events[eventName].filter(cb => cb !== callback);\r\n    }\r\n  }\r\n\r\n  // \u53D1\u5E03\u4E8B\u4EF6\r\n  public emit(eventName: string, ...args: any[]): void {\r\n    if (this.events[eventName]) {\r\n      this.events[eventName].forEach(callback => {\r\n        callback(...args);\r\n      });\r\n    }\r\n  }\r\n}\r\n", "import { Track } from \"./Track\"\r\nimport { EventEmitter } from \"./utils/EventEmitter\"\r\nimport { danmakuSet } from \"./DanmakuEngine\"\r\n\r\ntype DanmakuPosition = {\r\n  x: number\r\n  y: number\r\n}\r\n\r\ntype DanmakuRect = {\r\n  width: number\r\n  height: number\r\n}\r\nexport class Danmaku {\r\n  public element: HTMLElement | null = null\r\n  public parentTrack: Track | null = null\r\n  public animationID: number | null = null\r\n  public position: DanmakuPosition | null = null\r\n  public rect: DanmakuRect | null = null\r\n  public speedPerFrame = getRandomWithinTenPercent(0.5)\r\n  public currX = 0\r\n  public isPaused = false\r\n  private emitter = new EventEmitter()\r\n\r\n  constructor(track: Track, text: string) {\r\n    this.#initDanmaku(track, text)\r\n    danmakuSet.add(this)\r\n  }\r\n\r\n  #initDanmaku(track: Track, text: string) {\r\n    this.parentTrack = track\r\n    this.position = {\r\n      x: this.parentTrack.width,\r\n      y: this.parentTrack.index * this.parentTrack.height\r\n    }\r\n    this.element = document.createElement('div')\r\n    this.element.innerText = text\r\n    this.parentTrack.container.appendChild(this.element)\r\n\r\n    this.rect = {\r\n      width: this.element.clientWidth,\r\n      height: this.element.clientHeight\r\n    }\r\n    this.element.style.position = 'absolute'\r\n    this.element.style.left = `${this.position.x}px`\r\n    this.element.style.top = `${this.position.y}px`\r\n    this.element.style.pointerEvents = 'auto'\r\n  }\r\n  startMove() {\r\n    this.isPaused = false\r\n    const run = () => {\r\n      this.animationID = requestAnimationFrame(() => {\r\n        if (!this.element || !this.parentTrack || !this.rect) return\r\n        this.element.style.transform = `translateX(${this.currX}px)`\r\n        this.currX -= this.speedPerFrame\r\n        // debugger\r\n        if (this.currX < -this.rect.width - 30) {\r\n          this.emitter.emit('completeShow')\r\n        }\r\n        if (this.currX < -this.parentTrack.width - this.rect.width - 50) {\r\n          this.destroy()\r\n          return\r\n        }\r\n        run()\r\n      })\r\n    }\r\n    run()\r\n  }\r\n\r\n  stopMove() {\r\n    if (this.animationID) {\r\n      cancelAnimationFrame(this.animationID)\r\n      this.animationID = null\r\n      this.isPaused = true\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.emit('beforeDestroy')\r\n    this.stopMove()\r\n    this.element?.remove()\r\n    danmakuSet.delete(this)\r\n  }\r\n\r\n  onStartShow(fn: () => any) {\r\n    this.emitter.once('startShow', fn)\r\n  }\r\n  onCompleteShow(fn: () => any) {\r\n    this.emitter.once('completeShow', fn)\r\n  }\r\n\r\n  beforeDestroy(fn: () => any) {\r\n    this.emitter.on('beforeDestroy', fn)\r\n  }\r\n}\r\n\r\n\r\nfunction getRandomWithinTenPercent(num: number) {\r\n  // \u8BA1\u7B97 10% \u7684\u8303\u56F4\r\n  const tenPercent = num * 0.1;\r\n  // \u751F\u6210\u4E00\u4E2A\u5728 -10% \u5230 10% \u4E4B\u95F4\u7684\u968F\u673A\u504F\u79FB\u91CF\r\n  const randomOffset = Math.random() * (2 * tenPercent) - tenPercent;\r\n  // \u8BA1\u7B97\u6700\u7EC8\u7684\u968F\u673A\u6570\r\n  return num + randomOffset;\r\n}", "import { Danmaku } from \"./Danmaku\"\r\nimport { danmakuSet } from \"./DanmakuEngine\"\r\n\r\nexport type TrackOptions = {\r\n  height: number\r\n  width: number\r\n  index: number\r\n  container: HTMLElement\r\n}\r\n\r\nexport class Track {\r\n  public height: number\r\n  public width: number\r\n  public index: number\r\n  public container: HTMLElement\r\n  public isLocked: boolean = false\r\n  public trackDanmakuSet: Set<Danmaku> = new Set()\r\n  public lastDanmaku: Danmaku | null = null\r\n\r\n  constructor(trackOptions: TrackOptions) {\r\n    this.height = trackOptions.height\r\n    this.width = trackOptions.width\r\n    this.index = trackOptions.index\r\n    this.container = trackOptions.container\r\n  }\r\n\r\n  send(text: string) {\r\n    this.isLocked = true\r\n\r\n    const danmaku = new Danmaku(this, text)\r\n    if (this.lastDanmaku) {\r\n      const leftTime = (this.width + this.lastDanmaku.currX + this.lastDanmaku.rect!.width) / this.lastDanmaku.speedPerFrame\r\n      const newLeftTime = this.width / danmaku.speedPerFrame\r\n\r\n      // \u4F1A\u53D1\u751F\u78B0\u649E\r\n      if (leftTime > newLeftTime) {\r\n        // const newSpeed = this.width * this.lastDanmaku.speedPerFrame / (this.width + this.lastDanmaku.currX)\r\n        danmaku.speedPerFrame = this.lastDanmaku.speedPerFrame \r\n      }\r\n      // const newSpeed=this.width/leftTime\r\n    }\r\n    this.lastDanmaku = danmaku\r\n    this.trackDanmakuSet.add(danmaku)\r\n    danmaku.startMove()\r\n    danmaku.onCompleteShow(() => {\r\n      this.isLocked = false\r\n      console.log(\"\u89E3\u9501\");\r\n    }\r\n    )\r\n\r\n    danmaku.beforeDestroy(() => {\r\n      this.trackDanmakuSet.delete(danmaku)\r\n      console.log(\"\u5220\u9664\");\r\n    })\r\n  }\r\n}", "import { Track } from \"./Track\"\r\nimport { Danmaku } from \"./Danmaku\"\r\n\r\n// import {maskImage} from \"../public/maskimage1.jpg\"\r\n\r\nexport type DanmakuEngineOptions = {\r\n  antiOcclusion?: boolean\r\n}\r\n\r\nexport const danmakuSet: Set<Danmaku> = new Set()\r\n\r\nexport class DanmakuEngine {\r\n  public container: HTMLElement\r\n  public videoElement: HTMLVideoElement | null = null\r\n  public tracks: Track[] = []\r\n  public cacheStack: string[] = []\r\n  public isPlaying: boolean = false\r\n  public interval: number | null = null\r\n\r\n  constructor(parentContainer: HTMLElement, videoElement: HTMLVideoElement, options: DanmakuEngineOptions) {\r\n\r\n    this.#initVideoElement(videoElement)\r\n\r\n    this.container = document.createElement('div')\r\n    parentContainer.style.position = 'relative'\r\n    this.container.style.position = 'absolute'\r\n    this.container.style.top = '0'\r\n    this.container.style.left = '0'\r\n    this.container.style.zIndex = '1000'\r\n    this.container.style.height = '100%'\r\n    this.container.style.width = '100%'\r\n    this.container.style.display = 'flex'\r\n    this.container.style.pointerEvents = 'none'\r\n    this.container.style.overflow = 'hidden'\r\n    parentContainer.appendChild(this.container)\r\n    // this.container.style.webkitMaskBoxImage = `url(${png})`\r\n    // this.container.style.backgroundColor = 'red'\r\n    // this.container.style.maskImage = \"url('../public/maskimage2.png')\"\r\n    // this.container.style.webkitMaskBoxImage = \"url('../public/maskimage2.png')\"\r\n\r\n    this.#initTracks()\r\n\r\n  }\r\n\r\n  startPlaying() {\r\n    if (this.isPlaying) return\r\n    this.isPlaying = true\r\n\r\n    // \u6E05\u9664\u4E4B\u524D\u7684\u8F6E\u8BE2\r\n    if (this.interval) {\r\n      clearInterval(this.interval)\r\n      this.interval = null\r\n    }\r\n\r\n    // \u7EE7\u7EED\u4E4B\u524D\u7684\u5F39\u5E55\r\n    danmakuSet.forEach(danmaku => {\r\n      danmaku.startMove()\r\n    })\r\n\r\n    // \u8F6E\u8BE2\u6BCF\u4E2A\u672A\u9501\u5B9A\u7684\u8F68\u9053\uFF0C\u5982\u679C\u6709\u5F39\u5E55\u5219\u53D1\u9001\r\n    this.interval = setInterval(() => {\r\n      // console.log(\"interval\", this.cacheStack, Math.random());\r\n\r\n      if (this.cacheStack.length) {\r\n        const text = this.cacheStack.shift()\r\n        if (text) {\r\n          const track = this.tracks.find(track => !track.isLocked)\r\n          if (track) {\r\n            // console.log(track);\r\n\r\n            track.send(text)\r\n          }\r\n        }\r\n      }\r\n    }, 300)\r\n  }\r\n\r\n  stopPlaying() {\r\n    this.isPlaying = false\r\n    if (this.interval) {\r\n      clearInterval(this.interval)\r\n      this.interval = null\r\n    }\r\n    danmakuSet.forEach(danmaku => {\r\n      danmaku.stopMove()\r\n    })\r\n  }\r\n\r\n  send(text: string) {\r\n    this.cacheStack.push(text)\r\n  }\r\n\r\n  pause() {\r\n    danmakuSet.forEach(danmaku => {\r\n      danmaku.stopMove()\r\n    })\r\n    this.isPlaying = false\r\n  }\r\n\r\n  #initVideoElement(videoElement: HTMLVideoElement) {\r\n    this.videoElement = videoElement\r\n    this.videoElement.addEventListener('pause', () => {\r\n      console.log('pause');\r\n      this.stopPlaying()\r\n    })\r\n\r\n    this.videoElement.addEventListener('play', () => {\r\n      console.log('play'); \r\n      this.startPlaying()\r\n    })\r\n  }\r\n\r\n  #initTracks() {\r\n    const trackCount = 5\r\n    for (let i = 0; i < trackCount; i++) {\r\n      const track = new Track({\r\n        height: 32,\r\n        width: this.container.clientWidth,\r\n        index: i,\r\n        container: this.container\r\n      })\r\n      this.tracks.push(track)\r\n    }\r\n  }\r\n}"],
  "mappings": "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",
  "names": ["track"]
}
